//*********************************************
// Time-Series Signal Processing
// Rong-Hao Liang: r.liang@tue.nl
// Modified by Hannah van Iterson 2020: h.c.v.iterson@student.tue.nl
// This code can also be found here: https://github.com/Hannahathome/Interactive-Intelligent-Products
//*********************************************

//----------LIBRARIES----------//
#include <Wire.h>
#include <SPI.h>
#include <Adafruit_Sensor.h>

#include <SoftwareSerial.h>
#include <NXPMotionSense.h>
#include <Wire.h>
#include <EEPROM.h>

NXPMotionSense imu;
NXPSensorFusion filter;


//----------PARAMETERS----------//
long timer = micros();


// The X,Y,Z axis 
float ax, ay, az;
float gx, gy, gz;
float mx, my, mz;
float roll, pitch, heading;   


//----------CODE----------//
void setup() {
  Serial.begin(9600);                                                         //initialize a serial port at a 115200 baud rate.
  pinMode(LED_BUILTIN, OUTPUT);                                               //set the built-in LED to output
  imu.begin();
  filter.begin(100);//timer
}

void loop() {                                                                 // put your main code here, to run repeatedly:
  if (imu.available()) {
    timer = micros();
    getDataFromProcessing();                                                  //Receive before sending out the signals
    Serial.flush();                                                           //Flush the serial buffer

    // Read the motion sensors
    imu.readMotionSensor(ax, ay, az, gx, gy, gz, mx, my, mz);

    // Update the SensorFusion filter
    filter.update(gx, gy, gz, ax, ay, az, mx, my, mz);

    // get the positions 
    roll = filter.getRoll();
    pitch = filter.getPitch();
    heading = filter.getYaw();

    // Send data to Processing
    sendDataToProcessing('A', roll);
    sendDataToProcessing('B', pitch);
    sendDataToProcessing('C', heading);

    //----------CHECKING STREAM----------//
    Serial.print("Orientation: ");
    Serial.print(heading);
    Serial.print(" ");
    Serial.print(pitch);
    Serial.print(" ");
    Serial.println(roll);
  }
}

void getDataFromProcessing() {
  while (Serial.available()) {
    char inChar = (char)Serial.read();
  }
}

void sendDataToProcessing(char symbol, int data) {
  Serial.print(symbol);                                                       // symbol prefix of data type
  Serial.println(data);                                                       // the integer data with a carriage return
}
